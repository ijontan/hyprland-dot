
(defvar minute 0)
(defvar isam true)

(defwindow alarm []
  :namespace "alarm_wid"
  :monitor 0
  :geometry (geometry :anchor "right top" :x "40px" :y "60px")
  :stacking "fg"
  (box
    :class "alarm-box"
    :orientation "v"
    :halign "start"
    :spacing 10
    (select_time)
    (button :onclick "eww c alarm"
      "cancel"
    )
  )
)

(defwidget select_time []
  (box
    :class "time-box"
    :space-evenly false
    :spacing 10
    (select_hour)
    (box ":")
    (select_minute)
    (select_am)
    (button :onclick "scripts/alarm.sh set '${hour}:${minute}${isam ? "am" : "pm"}' hi"
      "Set Alarm ÔÅã"
    )
  )
)

(defwidget select_am []
  (eventbox
    :onclick "eww update isam=${!isam}"
    :onscroll "eww update isam=${!isam}"
    :class "select-number"
    :width 110
    (stack
      :selected {isam ? 0 : 1}
      :transition {isam ? "slideup" : "slidedown"}
      (box
        "am"
      )
      (box
        "pm"
      )
    )
  )
)

(defvar scroll_motion "slideup")

(defvar hour 0)
(defwidget select_hour []
  (eventbox
    :onclick "scripts/scroller.sh up hour ${hour} 0 12"
    :onrightclick "scripts/scroller.sh down hour ${hour} 0 12"
    :onscroll "scripts/scroller.sh {} hour ${hour} 0 12"
    :class "select-number"
    :width 70
    (stack
      :selected hour
      :transition scroll_motion
      (box 0)
      (box 1)
      (box 2)
      (box 3)
      (box 4)
      (box 5)
      (box 6)
      (box 7)
      (box 8)
      (box 9)
      (box 10)
      (box 11)
      (box 12)
    )
  )
)

(defwidget select_minute []
  (eventbox
    :onclick "scripts/scroller.sh up minute ${minute} 0 59"
    :onrightclick "scripts/scroller.sh down minute ${minute} 0 59"
    :onscroll "scripts/scroller.sh {} minute ${minute} 0 59"
    :class "select-number"
    :width 70
    (stack
      :selected minute
      :transition scroll_motion
      (box 0)
      (box 1)
      (box 2)
      (box 3)
      (box 4)
      (box 5)
      (box 6)
      (box 7)
      (box 8)
      (box 9)
      (box 10)
      (box 11)
      (box 12)
      (box 13)
      (box 14)
      (box 15)
      (box 16)
      (box 17)
      (box 18)
      (box 19)
      (box 20)
      (box 21)
      (box 22)
      (box 23)
      (box 24)
      (box 25)
      (box 26)
      (box 27)
      (box 28)
      (box 29)
      (box 30)
      (box 31)
      (box 32)
      (box 33)
      (box 34)
      (box 35)
      (box 36)
      (box 37)
      (box 38)
      (box 39)
      (box 40)
      (box 41)
      (box 42)
      (box 43)
      (box 44)
      (box 45)
      (box 46)
      (box 47)
      (box 48)
      (box 49)
      (box 50)
      (box 51)
      (box 52)
      (box 53)
      (box 54)
      (box 55)
      (box 56)
      (box 57)
      (box 58)
      (box 59)
    )
  )
)
